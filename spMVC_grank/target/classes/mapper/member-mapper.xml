<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.biz.grank.persistence.MemberDao">
	<!-- 회원 가입 -->
	<insert id="join" parameterType="mDto">
		INSERT INTO tbl_member(userid, passwd, name, phone, email, zipcode, addr1, addr2)
		VALUES(#{userid}, #{passwd}, #{name}, #{phone}, #{email}, #{zipcode}, #{addr1}, #{addr2})
	</insert>
	<!-- 로그인 체크 -->
	<select id="loginCheck" resultType="mDto" parameterType="mDto">
      SELECT * FROM tbl_member WHERE userid = #{userid}
   </select>
   <!-- userid로 값 검색 -->
   <select id="viewMember" resultType="mDto">
		SELECT * FROM tbl_member
		WHERE userid=#{userid}
   </select>
   <!-- 회원 수정 -->
   <update id="update" parameterType="mDto">
		UPDATE tbl_member SET name = #{name}, phone = #{phone}, email = #{email}, 
		zipcode = #{zipcode}, addr1 = #{addr1}, addr2 = #{addr2}
		WHERE userid = #{userid}
   </update>
   <!-- id 중복 체크 -->
   <select id="idCheck" resultType="int">
		SELECT COUNT(userid) FROM tbl_member
		WHERE userid = #{userid}
   </select>
   <!-- 비밀번호 체크 -->
   <select id="passCheck" resultType="int">
		SELECT COUNT(*) FROM tbl_member
		WHERE userid = #{userid} AND passwd = #{passwd}
   </select>
   <!-- 회원 탈퇴 -->
   <delete id="delete">
		DELETE FROM tbl_member WHERE userid = #{userid}
   </delete>
   <!-- 비밀번호 변경 -->
   <update id="psupdate" parameterType="mDto">
		UPDATE tbl_member SET passwd = #{passwd}
		WHERE userid = #{userid}
   </update>
   <!-- 이메일로 아이디가 있는지 체크 -->
   <select id="ajaxEmailCheck" resultType="string">
		SELECT userid FROM tbl_member
		WHERE email = #{email}
   </select>
   <!-- 아이디와 이메일로 비밀번호 있는지 체크 -->
   <select id="ajaxPswordCheck" resultType="string">
		SELECT passwd FROM tbl_member
		WHERE userid = #{userid} AND email = #{email}
   </select>
   <!-- 닉네임 중복 체크 -->
   <select id="ajaxNameCheck" resultType="int">
		SELECT COUNT(name) FROM tbl_member
		WHERE name = #{name}
   </select>
   <!-- 자동 로그인 -->
   <update id="autoLoginCheck" parameterType="mDto">
		UPDATE tbl_member SET sessionkey = #{sessionkey}, sessionlimit = #{sessionlimit}
		WHERE userid = #{userid}
   </update>
   <!-- 유효기간이 남아있으면 해당 id값으로 사용자 정보 가져오기 -->
   <select id="checkUserWithSessionKey" resultType="mDto">
		SELECT * FROM tbl_member
		WHERE sessionkey = #{sessionkey} AND sessionlimit > #{currentTimeMillis}
   </select>
   <select id="emailOverlapCheck" resultType="int">
   		SELECT COUNT(*) FROM tbl_member
   		WHERE email = #{email}
   </select>
</mapper>